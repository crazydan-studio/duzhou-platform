<?xml version="1.0" encoding="UTF-8" ?>
<c:unit xmlns:c="c" xmlns:xpl="xpl"
        xmlns:app-modeler="app-modeler">

    <c:script><![CDATA[
        const devApp = {
            ...module.getApp(),
            maven: {
                artifactId: 'parent',
                groupId: module.getApp().classPkgName,
                version: module.getApp().version,
                parent:{
                    groupId: 'io.crazydan.duzhou.framework',
                    artifactId: 'parent',
                    version: '0.1.0-SNAPSHOT',
                },
            },
        };
        const devAppModule = {
            ...module,
            app: null,
        };
    ]]></c:script>
    <app-modeler:GenOrmModel devApp="${devApp}" devAppModule="${devAppModule}"
                             xpl:return="ormModel"
                             xpl:lib="/duzhou/xlib/app-modeler.xlib" />
    <c:script><![CDATA[
        $scope.setLocalValue('app', {
            ...devApp,
            ormModels: [ ormModel ],
        });

        // Note：在调用方构造 codeGenerator 时指定 targetDir
        codeGenerator
            .withTplDir('/duzhou/templates/app')
            .execute('/', $scope);

        const moduleDirName = ormModel['ext:mavenArtifactId'];
        const moduleId = ormModel['ext:moduleId'];
        const moduleOrmModelFilePath = codeGenerator.getTargetPath(
            moduleDirName + '/orm/src/main/resources/_vfs/' + moduleId + '/orm/app.orm.xml'
        ).replaceAll('^.+:', '');

        // 向上层调用回传 ORM 模型的文件路径
        $scope.getParentScope().setLocalValue('ormModelFilePath', moduleOrmModelFilePath);
    ]]></c:script>
</c:unit>
